/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrossChainIncrementor,
  CrossChainIncrementorInterface,
} from "../CrossChainIncrementor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDeBridgeGate",
        name: "deBridgeGate_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "crossChainCounterResidenceChainID_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossChainCounterResidenceAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deBridgeGate",
    outputs: [
      {
        internalType: "contract IDeBridgeGate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
    ],
    name: "increment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_executionFee",
        type: "uint256",
      },
    ],
    name: "incrementWithIncludedGas",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065f38038061065f83398101604081905261002f91610066565b600080546001600160a01b039485166001600160a01b031991821617909155600192909255600280549190931691161790556100c1565b60008060006060848603121561007b57600080fd5b8351610086816100a9565b60208501516040860151919450925061009e816100a9565b809150509250925092565b6001600160a01b03811681146100be57600080fd5b50565b61058f806100d06000396000f3fe6080604052600436106100345760003560e01c8063a78730a514610039578063ca777fbf1461004e578063d6b46330146100a4575b600080fd5b61004c6100473660046103cc565b6100b7565b005b34801561005a57600080fd5b5060005461007b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004c6100b23660046103b1565b610137565b6040805160ff84166024820152336044808301919091528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fcca5afd40000000000000000000000000000000000000000000000000000000017905261013281836101b7565b505050565b6040805160ff83166024820152336044808301919091528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fcca5afd4000000000000000000000000000000000000000000000000000000001790526101b38160006101b7565b5050565b6101e26040518060800160405280600081526020016000815260200160608152602001606081525090565b81815260208101516101f79060026001610377565b6020820181905261020a90600180610377565b602080830191909152606082018490526040516102549133910160609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528281019190915260008054600154600254935160609490941b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602085015273ffffffffffffffffffffffffffffffffffffffff9091169263be2974769234929091839190603401604051602081830303815290604052600160008960405160200161030f91906104e5565b6040516020818303038152906040526040518963ffffffff1660e01b81526004016103409796959493929190610461565b6000604051808303818588803b15801561035957600080fd5b505af115801561036d573d6000803e3d6000fd5b5050505050505050565b6000811561038b57506001821b8317610394565b506001821b1983165b9392505050565b803560ff811681146103ac57600080fd5b919050565b6000602082840312156103c357600080fd5b6103948261039b565b600080604083850312156103df57600080fd5b6103e88361039b565b946020939093013593505050565b6000815180845260005b8181101561041c57602081850181015186830182015201610400565b8181111561042e576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff8a16835288602084015287604084015280606084015261049d818401886103f6565b90508281038060808501526000825286151560a085015263ffffffff861660c08501526020810160e0850152506104d760208201856103f6565b9a9950505050505050505050565b602081528151602082015260208201516040820152600060408301516080606084015261051560a08401826103f6565b905060608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084830301608085015261055082826103f6565b9594505050505056fea26469706673582212206ae547d79fe6e9e6a1a88e93450f3a5f90387f607dd96456b9f0d13fa19201d564736f6c63430008070033";

export class CrossChainIncrementor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    deBridgeGate_: string,
    crossChainCounterResidenceChainID_: BigNumberish,
    crossChainCounterResidenceAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrossChainIncrementor> {
    return super.deploy(
      deBridgeGate_,
      crossChainCounterResidenceChainID_,
      crossChainCounterResidenceAddress_,
      overrides || {}
    ) as Promise<CrossChainIncrementor>;
  }
  getDeployTransaction(
    deBridgeGate_: string,
    crossChainCounterResidenceChainID_: BigNumberish,
    crossChainCounterResidenceAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      deBridgeGate_,
      crossChainCounterResidenceChainID_,
      crossChainCounterResidenceAddress_,
      overrides || {}
    );
  }
  attach(address: string): CrossChainIncrementor {
    return super.attach(address) as CrossChainIncrementor;
  }
  connect(signer: Signer): CrossChainIncrementor__factory {
    return super.connect(signer) as CrossChainIncrementor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainIncrementorInterface {
    return new utils.Interface(_abi) as CrossChainIncrementorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainIncrementor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainIncrementor;
  }
}
